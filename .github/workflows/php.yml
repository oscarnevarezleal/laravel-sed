name: PHP Composer

on:
  push:
    branches: [ dev, main, feature/*, bugfix/* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      PACKAGE_VERSION: ${{ steps.package-version.outputs.PACKAGE_VERSION }}
    steps:
      - uses: actions/checkout@v2
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
      - uses: "ramsey/composer-install@v1"
      - name: Prepare tests
        run: composer create-project laravel/laravel sample-apps/laravel-app

      - name: Test
        run: |
          composer install
          vendor/bin/phpunit --configuration=phpunit.xml

      - name: Test Bin
        run: |
          php larased

      - name: Install Jq
        run: sudo apt-get install -y jq

      - name: Getting version right
        id: package-version
        run: |
          output=$(jq -rc '.version' composer.json)
          echo "::set-output name=PACKAGE_VERSION::$output"
        shell: bash

  rector:
    steps:
      - uses: actions/checkout@v2
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
      - uses: "ramsey/composer-install@v1"
      - run: vendor/bin/rector process --ansi
      - run: vendor/ecs check --match-git-diff --fix --ansi
      - uses: EndBug/add-and-commit@v5.1.0
        with:
          add: .
          message: "[ci-review] Apply Rector"
          author_name: "GitHub Actions"
          author_email: "action@github.com"
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ needs.test.outputs.PACKAGE_VERSION }}
          release_name: Release ${{ needs.test.outputs.PACKAGE_VERSION }}
          draft: false
          prerelease: false
